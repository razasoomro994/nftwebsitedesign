import Tappable from './Tappable';
declare type Tapper<V> = (v: V) => void;
declare type Untap = () => void;
export default class Emitter<V> {
    private _tappers;
    private _lastTapperId;
    readonly tappable: Tappable<V>;
    private _onNumberOfTappersChangeListener;
    constructor();
    _tap(cb: Tapper<V>): Untap;
    _removeTapperById(id: number): void;
    emit(payload: V): void;
    hasTappers(): boolean;
    onNumberOfTappersChange(cb: (n: number) => void): void;
}
export {};
//# sourceMappingURL=Emitter.d.ts.map