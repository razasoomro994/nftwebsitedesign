import type { IdentityDerivationProvider } from './Atom';
import type { Pointer } from './pointer';
export default class PointerProxy<O extends {}> implements IdentityDerivationProvider {
    readonly $$isIdentityDerivationProvider = true;
    private readonly _currentPointerBox;
    readonly pointer: Pointer<O>;
    constructor(currentPointer: Pointer<O>);
    setPointer(p: Pointer<O>): void;
    getIdentityDerivation(path: Array<string | number>): import(".").IDerivation<Pointer<O> extends import("./pointer").PointerType<infer T> ? T : void>;
}
//# sourceMappingURL=PointerProxy.d.ts.map