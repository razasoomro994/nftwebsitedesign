import type { VoidFn } from '../types';
import AbstractDerivation from './AbstractDerivation';
export default class DerivationFromSource<V> extends AbstractDerivation<V> {
    private readonly _tapToSource;
    private readonly _getValueFromSource;
    private _untapFromChanges;
    private _cachedValue;
    private _hasCachedValue;
    constructor(_tapToSource: (listener: (newValue: V) => void) => VoidFn, _getValueFromSource: () => V);
    _recalculate(): V;
    _keepHot(): void;
    _becomeCold(): void;
    _reactToDependencyBecomingStale(): void;
}
//# sourceMappingURL=DerivationFromSource.d.ts.map