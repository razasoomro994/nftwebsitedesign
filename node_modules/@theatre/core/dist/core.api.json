{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.18.11",
    "schemaVersion": 1004,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      }
    }
  },
  "kind": "Package",
  "canonicalReference": "@theatre/core!",
  "docComment": "",
  "name": "@theatre/core",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@theatre/core!",
      "name": "",
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@theatre/core!getProject:function(1)",
          "docComment": "/**\n * Returns a project of the given id, or creates one if it doesn't already exist.\n *\n * @remarks\n *\n * If \\@theatre/studio is also loaded, then the state of the project will be managed by the studio.\n *\n * [Learn more about exporting](https://docs.theatrejs.com/in-depth/#exporting)\n *\n * @example\n *\n * Usage:\n * ```ts\n * import {getProject} from '@theatre/core'\n * const config = {} // the config can be empty when starting a new project\n * const project = getProject(\"a-unique-id\", config)\n * ```\n *\n * @example\n *\n * Usage with an explicit state:\n * ```ts\n * import {getProject} from '@theatre/core'\n * import state from './saved-state.json'\n * const config = {state} // here the config contains our saved state\n * const project = getProject(\"a-unique-id\", config)\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getProject(id: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", config?: "
            },
            {
              "kind": "Reference",
              "text": "IProjectConfig",
              "canonicalReference": "@theatre/core!IProjectConfig:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IProject",
              "canonicalReference": "@theatre/core!IProject:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "id",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "config",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getProject"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@theatre/core!IProject:interface",
          "docComment": "/**\n * A Theatre project\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IProject "
            }
          ],
          "releaseTag": "Public",
          "name": "IProject",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@theatre/core!IProject#address:member",
              "docComment": "/**\n * The project's address\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly address: "
                },
                {
                  "kind": "Reference",
                  "text": "ProjectAddress",
                  "canonicalReference": "@theatre/core!ProjectAddress:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "address",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@theatre/core!IProject#isReady:member",
              "docComment": "/**\n * Shows whether the project is ready to be used. Better to use {@link IProject.ready}, which is a promise that would resolve when the project is ready.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isReady: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isReady",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@theatre/core!IProject#ready:member",
              "docComment": "/**\n * If `@theatre/studio` is used, this promise would resolve when studio has loaded the state of the project into memory.\n *\n * If `@theatre/studio` is not used, this promise is already resolved.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly ready: "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ready",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@theatre/core!IProject#sheet:member(1)",
              "docComment": "/**\n * Creates a Sheet under the project\n *\n * @param sheetId - Sheets are identified by their `sheetId`, which must be a string longer than 3 characters\n *\n * @param instanceId - Optionally provide an `instanceId` if you want to create multiple instances of the same Sheet\n *\n * @returns The newly created Sheet\n *\n * **Docs: https://docs.theatrejs.com/in-depth/#sheets**\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sheet(sheetId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", instanceId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ISheet",
                  "canonicalReference": "@theatre/core!ISheet:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "sheetId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "instanceId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "sheet"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@theatre/core!IProject#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly type: "
                },
                {
                  "kind": "Content",
                  "text": "'Theatre_Project_PublicAPI'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@theatre/core!IProjectConfig:type",
          "docComment": "/**\n * A project's config object (currently the only point of configuration is the project's state)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IProjectConfig = "
            },
            {
              "kind": "Content",
              "text": "{\n    state?: "
            },
            {
              "kind": "Reference",
              "text": "$IntentionalAny",
              "canonicalReference": "@theatre/core!$IntentionalAny:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IProjectConfig",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@theatre/core!ISequence:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISequence "
            }
          ],
          "releaseTag": "Public",
          "name": "ISequence",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@theatre/core!ISequence#attachAudio:member(1)",
              "docComment": "/**\n * Attaches an audio source to the sequence. Playing the sequence automatically plays the audio source and their times are kept in sync.\n *\n * @returns A promise that resolves once the audio source is loaded and decoded\n *\n * Learn more [here](https://docs.theatrejs.com/in-depth/#sequence-attachaudio).\n *\n * Usage:\n * ```ts\n * // Loads and decodes audio from the URL and then attaches it to the sequence\n * await sheet.sequence.attachAudio({source: \"https://localhost/audio.ogg\"})\n * sheet.sequence.play()\n *\n * // Providing your own AudioAPI Context, destination, etc\n * const audioContext: AudioContext = {...} // create an AudioContext using the Audio API\n * const audioBuffer: AudioBuffer = {...} // create an AudioBuffer\n * const destinationNode = audioContext.destination\n *\n * await sheet.sequence.attachAudio({source: audioBuffer, audioContext, destinationNode})\n * ```\n *\n * Note: It's better to provide the `audioContext` rather than allow Theatre to create it. That's because some browsers [suspend the audioContext](https://developer.chrome.com/blog/autoplay/#webaudio) unless it's initiated by a user gesture, like a click. If that happens, Theatre will wait for a user gesture to resume the audioContext. But that's probably not an optimal user experience. It is better to provide a button or some other UI element to communicate to the user that they have to initiate the animation.\n *\n * Example:\n * ```ts\n * // html: <button id=\"#start\">start</button>\n * const button = document.getElementById('start')\n *\n * button.addEventListener('click', async () => {\n *   const audioContext = ...\n *   await sheet.sequence.attachAudio({audioContext, source: '...'})\n *   sheet.sequence.play()\n * })\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "attachAudio(args: "
                },
                {
                  "kind": "Reference",
                  "text": "IAttachAudioArgs",
                  "canonicalReference": "@theatre/core!~IAttachAudioArgs:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        decodedBuffer: "
                },
                {
                  "kind": "Reference",
                  "text": "AudioBuffer",
                  "canonicalReference": "!AudioBuffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        audioContext: "
                },
                {
                  "kind": "Reference",
                  "text": "AudioContext",
                  "canonicalReference": "!AudioContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        destinationNode: "
                },
                {
                  "kind": "Reference",
                  "text": "AudioNode",
                  "canonicalReference": "!AudioNode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        gainNode: "
                },
                {
                  "kind": "Reference",
                  "text": "GainNode",
                  "canonicalReference": "!GainNode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "attachAudio"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@theatre/core!ISequence#pause:member(1)",
              "docComment": "/**\n * Pauses the currently playing animation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pause(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "pause"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@theatre/core!ISequence#play:member(1)",
              "docComment": "/**\n * Starts playback of a sequence. Returns a promise that either resolves to true when the playback completes, or resolves to false if playback gets interrupted (for example by calling sequence.pause())\n *\n * @returns A promise that resolves when the playback is finished, or rejects if interruped\n *\n * Usage:\n * ```ts\n * // plays the sequence from the current position to sequence.length\n * sheet.sequence.play()\n *\n * // plays the sequence at 2.4x speed\n * sheet.sequence.play({rate: 2.4})\n *\n * // plays the sequence from second 1 to 4\n * sheet.sequence.play({range: [1, 4]})\n *\n * // plays the sequence 4 times\n * sheet.sequence.play({iterationCount: 4})\n *\n * // plays the sequence in reverse\n * sheet.sequence.play({direction: 'reverse'})\n *\n * // plays the sequence back and forth forever (until interrupted)\n * sheet.sequence.play({iterationCount: Infinity, direction: 'alternateReverse})\n *\n * // plays the sequence and logs \"done\" once playback is finished\n * sheet.sequence.play().then(() => console.log('done'))\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "play(conf?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        iterationCount?: number;\n        range?: "
                },
                {
                  "kind": "Reference",
                  "text": "IPlaybackRange",
                  "canonicalReference": "@theatre/core!IPlaybackRange:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        rate?: number;\n        direction?: "
                },
                {
                  "kind": "Reference",
                  "text": "IPlaybackDirection",
                  "canonicalReference": "@theatre/core!IPlaybackDirection:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "conf",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  }
                }
              ],
              "name": "play"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@theatre/core!ISequence#position:member",
              "docComment": "/**\n * The current position of the playhead. In a time-based sequence, this represents the current time in seconds.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "position: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "position",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@theatre/core!ISequence#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly type: "
                },
                {
                  "kind": "Content",
                  "text": "'Theatre_Sequence_PublicAPI'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@theatre/core!ISheet:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISheet "
            }
          ],
          "releaseTag": "Public",
          "name": "ISheet",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@theatre/core!ISheet#address:member",
              "docComment": "/**\n * The address of the Sheet\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly address: "
                },
                {
                  "kind": "Reference",
                  "text": "SheetAddress",
                  "canonicalReference": "@theatre/core!SheetAddress:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "address",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@theatre/core!ISheet#object:member(1)",
              "docComment": "/**\n * Creates a child object for the sheet\n *\n * **Docs: https://docs.theatrejs.com/in-depth/#objects**\n *\n * @param key - Each object is identified by a key, which is a non-empty string\n *\n * @param props - The props of the object. See examples\n *\n * @returns An Object\n *\n * Usage:\n * ```ts\n * // Create an object named \"a unique key\" with no props\n * const obj = sheet.object(\"a unique key\", {})\n * obj.address.objectKey // \"a unique key\"\n *\n *\n * // Create an object with {x: 0}\n * const obj = sheet.object(\"obj\", {x: 0})\n * obj.value.x // returns 0 or the current number that the user has set\n *\n * // Create an object with nested props\n * const obj = sheet.object(\"obj\", {position: {x: 0, y: 0}})\n * obj.value.position // {x: 0, y: 0}\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "object<Props extends "
                },
                {
                  "kind": "Reference",
                  "text": "IShorthandCompoundProps",
                  "canonicalReference": "@theatre/core!IShorthandCompoundProps:type"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Content",
                  "text": "Props"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ISheetObject",
                  "canonicalReference": "@theatre/core!ISheetObject:interface"
                },
                {
                  "kind": "Content",
                  "text": "<Props>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "Props",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "object"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@theatre/core!ISheet#project:member",
              "docComment": "/**\n * The Project this Sheet belongs to\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly project: "
                },
                {
                  "kind": "Reference",
                  "text": "IProject",
                  "canonicalReference": "@theatre/core!IProject:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "project",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@theatre/core!ISheet#sequence:member",
              "docComment": "/**\n * The Sequence of this Sheet\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly sequence: "
                },
                {
                  "kind": "Reference",
                  "text": "ISequence",
                  "canonicalReference": "@theatre/core!ISequence:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sequence",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@theatre/core!ISheet#type:member",
              "docComment": "/**\n * All sheets have `sheet.type === 'Theatre_Sheet_PublicAPI'`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly type: "
                },
                {
                  "kind": "Content",
                  "text": "'Theatre_Sheet_PublicAPI'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@theatre/core!ISheetObject:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISheetObject<Props extends "
            },
            {
              "kind": "Reference",
              "text": "IShorthandCompoundProps",
              "canonicalReference": "@theatre/core!IShorthandCompoundProps:type"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "Props",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "ISheetObject",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@theatre/core!ISheetObject#address:member",
              "docComment": "/**\n * An object representing the address of the Object\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly address: "
                },
                {
                  "kind": "Reference",
                  "text": "SheetObjectAddress",
                  "canonicalReference": "@theatre/core!SheetObjectAddress:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "address",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@theatre/core!ISheetObject#onValuesChange:member(1)",
              "docComment": "/**\n * Calls `fn` every time the value of the props change.\n *\n * @returns an Unsubscribe function\n *\n * Usage:\n * ```ts\n * const obj = sheet.object(\"Box\", {position: {x: 0, y: 0}})\n * const div = document.getElementById(\"box\")\n *\n * const unsubscribe = obj.onValuesChange((newValues) => {\n *   div.style.left = newValues.position.x + 'px'\n *   div.style.top = newValues.position.y + 'px'\n * })\n *\n * // you can call unsubscribe() to stop listening to changes\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onValuesChange(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(values: this['value']) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VoidFn",
                  "canonicalReference": "@theatre/core!VoidFn:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "onValuesChange"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@theatre/core!ISheetObject#project:member",
              "docComment": "/**\n * The Project the project belongs to\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly project: "
                },
                {
                  "kind": "Reference",
                  "text": "IProject",
                  "canonicalReference": "@theatre/core!IProject:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "project",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@theatre/core!ISheetObject#props:member",
              "docComment": "/**\n * A Pointer to the props of the object.\n *\n * More documentation soon.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly props: "
                },
                {
                  "kind": "Reference",
                  "text": "Pointer",
                  "canonicalReference": "@theatre/dataverse!Pointer:type"
                },
                {
                  "kind": "Content",
                  "text": "<this['value']>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "props",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@theatre/core!ISheetObject#sheet:member",
              "docComment": "/**\n * The instance of Sheet the Object belongs to\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly sheet: "
                },
                {
                  "kind": "Reference",
                  "text": "ISheet",
                  "canonicalReference": "@theatre/core!ISheet:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sheet",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@theatre/core!ISheetObject#type:member",
              "docComment": "/**\n * All Objects will have `object.type === 'Theatre_SheetObject_PublicAPI'`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly type: "
                },
                {
                  "kind": "Content",
                  "text": "'Theatre_SheetObject_PublicAPI'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@theatre/core!ISheetObject#value:member",
              "docComment": "/**\n * The current values of the props.\n *\n * Usage:\n * ```ts\n * const obj = sheet.object(\"obj\", {x: 0})\n * console.log(obj.value.x) // prints 0 or the current numeric value\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly value: "
                },
                {
                  "kind": "Reference",
                  "text": "ShorthandPropToLonghandProp",
                  "canonicalReference": "@theatre/core!ShorthandPropToLonghandProp:type"
                },
                {
                  "kind": "Content",
                  "text": "<Props>['valueType']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@theatre/core!onChange:function(1)",
          "docComment": "/**\n * Calls `callback` every time the pointed value of `pointer` changes.\n *\n * @param pointer - A pointer (like `object.props.x`)\n *\n * @param callback - The callback is called every time the value of pointerOrDerivation changes\n *\n * @returns An unsubscribe function\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function onChange<P extends "
            },
            {
              "kind": "Reference",
              "text": "PointerType",
              "canonicalReference": "@theatre/dataverse!PointerType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "$IntentionalAny",
              "canonicalReference": "@theatre/core!$IntentionalAny:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ">(pointer: "
            },
            {
              "kind": "Content",
              "text": "P"
            },
            {
              "kind": "Content",
              "text": ", callback: "
            },
            {
              "kind": "Content",
              "text": "(value: P extends "
            },
            {
              "kind": "Reference",
              "text": "PointerType",
              "canonicalReference": "@theatre/dataverse!PointerType:type"
            },
            {
              "kind": "Content",
              "text": "<infer T> ? T : unknown) => void"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "VoidFn",
              "canonicalReference": "@theatre/core!VoidFn:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "pointer",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            },
            {
              "parameterName": "callback",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 11
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "onChange"
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@theatre/core!types:namespace",
          "docComment": "",
          "excerptTokens": [],
          "releaseTag": "None",
          "name": "types",
          "members": [
            {
              "kind": "Variable",
              "canonicalReference": "@theatre/core!types.boolean:var",
              "docComment": "/**\n * A boolean prop type\n *\n * Usage:\n * ```ts\n * // shorthand:\n * const obj = sheet.object('key', {isOn: true})\n *\n * // with a label:\n * const obj = sheet.object('key', {\n *   isOn: t.boolean(true, {\n *     label: 'Enabled'\n *   })\n * })\n * ```\n *\n * @param defaultValue - The default value (must be a boolean)\n *\n * @param opts - Options (See usage examples)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "boolean: "
                },
                {
                  "kind": "Content",
                  "text": "(defaultValue: boolean, opts?: "
                },
                {
                  "kind": "Reference",
                  "text": "PropTypeConfigOpts",
                  "canonicalReference": "@theatre/core!PropTypeConfigOpts:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined) => "
                },
                {
                  "kind": "Reference",
                  "text": "PropTypeConfig_Boolean",
                  "canonicalReference": "@theatre/core!PropTypeConfig_Boolean:interface"
                }
              ],
              "releaseTag": "Public",
              "name": "boolean",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@theatre/core!types.compound:var",
              "docComment": "/**\n * A compound prop type (basically a JS object).\n *\n * Usage:\n * ```ts\n * // shorthand\n * const position = {\n *   x: 0,\n *   y: 0\n * }\n * assert(sheet.object('some object', position).value.x === 0)\n *\n * // nesting\n * const foo = {bar: {baz: {quo: 0}}}\n * assert(sheet.object('some object', foo).bar.baz.quo === 0)\n *\n * // With additional options:\n * const position = t.compound(\n *   {x: 0, y: 0},\n *   // a custom label for the prop:\n *   {label: \"Position\"}\n * )\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compound: "
                },
                {
                  "kind": "Content",
                  "text": "<Props extends "
                },
                {
                  "kind": "Reference",
                  "text": "IShorthandCompoundProps",
                  "canonicalReference": "@theatre/core!IShorthandCompoundProps:type"
                },
                {
                  "kind": "Content",
                  "text": ">(props: Props, opts?: "
                },
                {
                  "kind": "Reference",
                  "text": "PropTypeConfigOpts",
                  "canonicalReference": "@theatre/core!PropTypeConfigOpts:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined) => "
                },
                {
                  "kind": "Reference",
                  "text": "PropTypeConfig_Compound",
                  "canonicalReference": "@theatre/core!PropTypeConfig_Compound:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ShorthandCompoundPropsToLonghandCompoundProps",
                  "canonicalReference": "@theatre/core!ShorthandCompoundPropsToLonghandCompoundProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<Props>>"
                }
              ],
              "releaseTag": "Public",
              "name": "compound",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@theatre/core!types.number:var",
              "docComment": "/**\n * A number prop type.\n *\n * Usage\n * ```ts\n * // shorthand:\n * const obj = sheet.object('key', {x: 0})\n *\n * // With options (equal to above)\n * const obj = sheet.object('key', {\n *   x: t.number(0)\n * })\n *\n * // With a range (note that opts.range is just a visual guide, not a validation rule)\n * const x = t.number(0, {range: [0, 10]}) // limited to 0 and 10\n *\n * // With custom nudging\n * const x = t.number(0, {nudgeMultiplier: 0.1}) // nudging will happen in 0.1 increments\n *\n * // With custom nudging function\n * const x = t.number({\n *   nudgeFn: (\n *     // the mouse movement (in pixels)\n *     deltaX: number,\n *     // the movement as a fraction of the width of the number editor's input\n *     deltaFraction: number,\n *     // A multiplier that's usually 1, but might be another number if user wants to nudge slower/faster\n *     magnitude: number,\n *     // the configuration of the number\n *     config: {nudgeMultiplier?: number; range?: [number, number]},\n *   ): number => {\n *     return deltaX * magnitude\n *   },\n * })\n * ```\n *\n * @param defaultValue - The default value (Must be a finite number)\n *\n * @param opts - The options (See usage examples)\n *\n * @returns A number prop config\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "number: "
                },
                {
                  "kind": "Content",
                  "text": "(defaultValue: number, opts?: ({\n    nudgeFn?: "
                },
                {
                  "kind": "Reference",
                  "text": "NumberNudgeFn",
                  "canonicalReference": "@theatre/core!NumberNudgeFn:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined;\n    range?: "
                },
                {
                  "kind": "Reference",
                  "text": "PropTypeConfig_Number",
                  "canonicalReference": "@theatre/core!PropTypeConfig_Number:interface"
                },
                {
                  "kind": "Content",
                  "text": "['range'];\n    nudgeMultiplier?: number | undefined;\n} & "
                },
                {
                  "kind": "Reference",
                  "text": "PropTypeConfigOpts",
                  "canonicalReference": "@theatre/core!PropTypeConfigOpts:interface"
                },
                {
                  "kind": "Content",
                  "text": ") | undefined) => "
                },
                {
                  "kind": "Reference",
                  "text": "PropTypeConfig_Number",
                  "canonicalReference": "@theatre/core!PropTypeConfig_Number:interface"
                }
              ],
              "releaseTag": "Public",
              "name": "number",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@theatre/core!types.NumberNudgeFn:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare type NumberNudgeFn = "
                },
                {
                  "kind": "Content",
                  "text": "(p: {\n    deltaX: number;\n    deltaFraction: number;\n    magnitude: number;\n    config: "
                },
                {
                  "kind": "Reference",
                  "text": "PropTypeConfig_Number",
                  "canonicalReference": "@theatre/core!PropTypeConfig_Number:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n}) => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "NumberNudgeFn",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@theatre/core!types.PropTypeConfig_AllPrimitives:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare type PropTypeConfig_AllPrimitives = "
                },
                {
                  "kind": "Reference",
                  "text": "PropTypeConfig_Number",
                  "canonicalReference": "@theatre/core!PropTypeConfig_Number:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "PropTypeConfig_Boolean",
                  "canonicalReference": "@theatre/core!PropTypeConfig_Boolean:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "PropTypeConfig_String",
                  "canonicalReference": "@theatre/core!PropTypeConfig_String:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "PropTypeConfig_StringLiteral",
                  "canonicalReference": "@theatre/core!PropTypeConfig_StringLiteral:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "$IntentionalAny",
                  "canonicalReference": "@theatre/core!$IntentionalAny:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "PropTypeConfig_AllPrimitives",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 11
              }
            },
            {
              "kind": "Interface",
              "canonicalReference": "@theatre/core!types.PropTypeConfig_Boolean:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PropTypeConfig_Boolean extends "
                },
                {
                  "kind": "Reference",
                  "text": "IBasePropType",
                  "canonicalReference": "@theatre/core!~IBasePropType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean> "
                }
              ],
              "releaseTag": "Public",
              "name": "PropTypeConfig_Boolean",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@theatre/core!types.PropTypeConfig_Boolean#default:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "default: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "default",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@theatre/core!types.PropTypeConfig_Boolean#type:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Content",
                      "text": "'boolean'"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 3
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "@theatre/core!types.PropTypeConfig_Compound:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PropTypeConfig_Compound<Props extends "
                },
                {
                  "kind": "Reference",
                  "text": "IValidCompoundProps",
                  "canonicalReference": "@theatre/core!IValidCompoundProps:type"
                },
                {
                  "kind": "Content",
                  "text": "> extends "
                },
                {
                  "kind": "Reference",
                  "text": "IBasePropType",
                  "canonicalReference": "@theatre/core!~IBasePropType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n    [K in keyof Props]: Props[K]['valueType'];\n}> "
                }
              ],
              "releaseTag": "Public",
              "typeParameters": [
                {
                  "typeParameterName": "Props",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "PropTypeConfig_Compound",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@theatre/core!types.PropTypeConfig_Compound#props:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "props: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Record",
                      "canonicalReference": "!Record:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<string, "
                    },
                    {
                      "kind": "Reference",
                      "text": "PropTypeConfig",
                      "canonicalReference": "@theatre/core!PropTypeConfig:type"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "props",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@theatre/core!types.PropTypeConfig_Compound#type:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Content",
                      "text": "'compound'"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": [
                {
                  "startIndex": 3,
                  "endIndex": 5
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "@theatre/core!types.PropTypeConfig_Enum:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PropTypeConfig_Enum extends "
                },
                {
                  "kind": "Reference",
                  "text": "IBasePropType",
                  "canonicalReference": "@theatre/core!~IBasePropType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{}> "
                }
              ],
              "releaseTag": "Public",
              "name": "PropTypeConfig_Enum",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@theatre/core!types.PropTypeConfig_Enum#cases:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "cases: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Record",
                      "canonicalReference": "!Record:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<string, "
                    },
                    {
                      "kind": "Reference",
                      "text": "PropTypeConfig",
                      "canonicalReference": "@theatre/core!PropTypeConfig:type"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "cases",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@theatre/core!types.PropTypeConfig_Enum#defaultCase:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "defaultCase: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "defaultCase",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@theatre/core!types.PropTypeConfig_Enum#type:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Content",
                      "text": "'enum'"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 3
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "@theatre/core!types.PropTypeConfig_Number:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PropTypeConfig_Number extends "
                },
                {
                  "kind": "Reference",
                  "text": "IBasePropType",
                  "canonicalReference": "@theatre/core!~IBasePropType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number> "
                }
              ],
              "releaseTag": "Public",
              "name": "PropTypeConfig_Number",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@theatre/core!types.PropTypeConfig_Number#default:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "default: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "default",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@theatre/core!types.PropTypeConfig_Number#nudgeFn:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nudgeFn: "
                    },
                    {
                      "kind": "Reference",
                      "text": "NumberNudgeFn",
                      "canonicalReference": "@theatre/core!NumberNudgeFn:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "nudgeFn",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@theatre/core!types.PropTypeConfig_Number#nudgeMultiplier:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "nudgeMultiplier: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "nudgeMultiplier",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@theatre/core!types.PropTypeConfig_Number#range:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "range?: "
                    },
                    {
                      "kind": "Content",
                      "text": "[min: number, max: number]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "range",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@theatre/core!types.PropTypeConfig_Number#type:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Content",
                      "text": "'number'"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 3
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "@theatre/core!types.PropTypeConfig_String:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PropTypeConfig_String extends "
                },
                {
                  "kind": "Reference",
                  "text": "IBasePropType",
                  "canonicalReference": "@theatre/core!~IBasePropType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string> "
                }
              ],
              "releaseTag": "Public",
              "name": "PropTypeConfig_String",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@theatre/core!types.PropTypeConfig_String#default:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "default: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "default",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@theatre/core!types.PropTypeConfig_String#type:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Content",
                      "text": "'string'"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 3
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "@theatre/core!types.PropTypeConfig_StringLiteral:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PropTypeConfig_StringLiteral<T extends "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "> extends "
                },
                {
                  "kind": "Reference",
                  "text": "IBasePropType",
                  "canonicalReference": "@theatre/core!~IBasePropType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T> "
                }
              ],
              "releaseTag": "Public",
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "PropTypeConfig_StringLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@theatre/core!types.PropTypeConfig_StringLiteral#as:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "as: "
                    },
                    {
                      "kind": "Content",
                      "text": "'menu' | 'switch'"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "as",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@theatre/core!types.PropTypeConfig_StringLiteral#default:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "default: "
                    },
                    {
                      "kind": "Content",
                      "text": "T"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "default",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@theatre/core!types.PropTypeConfig_StringLiteral#options:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Record",
                      "canonicalReference": "!Record:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<T, string>"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "options",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@theatre/core!types.PropTypeConfig_StringLiteral#type:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Content",
                      "text": "'stringLiteral'"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": [
                {
                  "startIndex": 3,
                  "endIndex": 5
                }
              ]
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "@theatre/core!types.PropTypeConfig:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare type PropTypeConfig = "
                },
                {
                  "kind": "Reference",
                  "text": "PropTypeConfig_AllPrimitives",
                  "canonicalReference": "@theatre/core!PropTypeConfig_AllPrimitives:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "PropTypeConfig_Compound",
                  "canonicalReference": "@theatre/core!PropTypeConfig_Compound:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "$IntentionalAny",
                  "canonicalReference": "@theatre/core!$IntentionalAny:type"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "PropTypeConfig_Enum",
                  "canonicalReference": "@theatre/core!PropTypeConfig_Enum:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "PropTypeConfig",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "Interface",
              "canonicalReference": "@theatre/core!types.PropTypeConfigOpts:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PropTypeConfigOpts "
                }
              ],
              "releaseTag": "Public",
              "name": "PropTypeConfigOpts",
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "@theatre/core!types.PropTypeConfigOpts#label:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "label?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "label",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Variable",
              "canonicalReference": "@theatre/core!types.string:var",
              "docComment": "/**\n * A string prop type\n *\n * Usage:\n * ```ts\n * // shorthand:\n * const obj = sheet.object('key', {message: \"Animation loading\"})\n *\n * // with a label:\n * const obj = sheet.object('key', {\n *   message: t.string(\"Animation Loading\", {\n *     label: 'The Message'\n *   })\n * })\n * ```\n *\n * @param defaultValue - The default value (must be a string)\n *\n * @param opts - The options (See usage examples)\n *\n * @returns A string prop type\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "string: "
                },
                {
                  "kind": "Content",
                  "text": "(defaultValue: string, opts?: "
                },
                {
                  "kind": "Reference",
                  "text": "PropTypeConfigOpts",
                  "canonicalReference": "@theatre/core!PropTypeConfigOpts:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined) => "
                },
                {
                  "kind": "Reference",
                  "text": "PropTypeConfig_String",
                  "canonicalReference": "@theatre/core!PropTypeConfig_String:interface"
                }
              ],
              "releaseTag": "Public",
              "name": "string",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "Function",
              "canonicalReference": "@theatre/core!types.stringLiteral:function(1)",
              "docComment": "/**\n * A stringLiteral prop type, useful for building menus or radio buttons.\n *\n * @returns A stringLiteral prop type\n *\n * @example\n *\n * Usage:\n * ```ts\n * // Basic usage\n * const obj = sheet.object('key', {\n *   light: t.stringLiteral(\"r\", {r: \"Red\", \"g\": \"Green\"})\n * })\n *\n * // Shown as a radio switch with a custom label\n * const obj = sheet.object('key', {\n *   light: t.stringLiteral(\"r\", {r: \"Red\", \"g\": \"Green\"})\n * }, {as: \"switch\", label: \"Street Light\"})\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function stringLiteral<Opts extends "
                },
                {
                  "kind": "Content",
                  "text": "{\n    [key in string]: string;\n}"
                },
                {
                  "kind": "Content",
                  "text": ">(\ndefaultValue: "
                },
                {
                  "kind": "Reference",
                  "text": "Extract",
                  "canonicalReference": "!Extract:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof Opts, string>"
                },
                {
                  "kind": "Content",
                  "text": ", \noptions: "
                },
                {
                  "kind": "Content",
                  "text": "Opts"
                },
                {
                  "kind": "Content",
                  "text": ", \nopts?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    as?: 'menu' | 'switch';\n} & "
                },
                {
                  "kind": "Reference",
                  "text": "PropTypeConfigOpts",
                  "canonicalReference": "@theatre/core!PropTypeConfigOpts:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PropTypeConfig_StringLiteral",
                  "canonicalReference": "@theatre/core!PropTypeConfig_StringLiteral:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Extract",
                  "canonicalReference": "!Extract:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof Opts, string>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "defaultValue",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "opts",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 10
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "Opts",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "stringLiteral"
            }
          ]
        }
      ]
    }
  ]
}
